name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

jobs:
  test:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }} / cabal ${{ matrix.cabal }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        cabal: ["2.4", "3.4"]
        ghc: ["8.0.2"]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: actions/setup-haskell@v1
      id: setup-haskell-cabal
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
        enable-stack: true
        stack-version: 2.1.3

    - name: Update cabal
      if: runner.os == 'Linux'
      run: cabal new-update

    - name: Install asound package
      if: runner.os == 'Linux'
      run: sudo apt-get install libasound2-dev

    # Generate .freeze files with all dependencies to use as the cache key.
    - name: Freeze (cabal)
      if: runner.os == 'Linux'
      run: cabal new-freeze

    - name: Freeze (stack)
      if: runner.os == 'macOS'
      run: stack freeze >> stack.freeze

    # Cache to avoid rebuilding dependencies for every build.
    - uses: actions/cache@v2
      name: Cache ~/.cabal/store
      if: runner.os == 'Linux'
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key:          cabal-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
        restore-keys: cabal-${{ matrix.ghc }}-

    - uses: actions/cache@v2
      name: Cache ~/.stack and .stack-work
      if: runner.os == 'macOS'
      with:
        path: |
          ~/.stack
          $GITHUB_WORKSPACE.stack-work
        key:          stack-${{ matrix.ghc }}-${{ hashFiles('stack.freeze') }}
        restore-keys: stack-${{ matrix.ghc }}-

    # Build & test
    - name: Switch to stack if on macOS
      run: echo X='STACK=1' >> $GITHUB_ENV
      if: runner.os == 'macOS'
    - name: Build
      run: make $X build
    - name: Test
      run: make $X test

    # Deployment (done locally for now)
    # - name: Render documentation, website and publish to Hackage
    #   if: github.ref == 'refs/heads/master' && runner.os == 'Linux' && matrix.cabal == '3.4'
    #   env:
    #     HACKAGE_USERNAME: ${{ secrets.HACKAGE_USERNAME }}
    #     HACKAGE_PASSWORD: ${{ secrets.HACKAGE_PASSWORD }}
    #   run: |
    #    make docs 
    #    make website
    #    bash publish.sh

    # - name: Deploy ðŸš€
    #   if: github.ref == 'refs/heads/master' && runner.os == 'Linux' && matrix.cabal == '3.4'
    #   uses: JamesIves/github-pages-deploy-action@3.7.1
    #   with:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     BRANCH: gh-pages
    #     FOLDER: out
